diff --git a/dist/index.js b/dist/index.js
index d9bd58496cf7c05b4795e6963ea82276a62b7d6d..9b0678b7593fa0cb1bcdb6a13d3a5b1a7af20a99 100644
--- a/dist/index.js
+++ b/dist/index.js
@@ -107,6 +107,28 @@ var ErrorCode = /* @__PURE__ */ ((ErrorCode2) => {
   return ErrorCode2;
 })(ErrorCode || {});
 
+function formatComplexObject(obj, depth = 2) {
+    if (Array.isArray(obj)) {
+        const indent = " ".repeat(depth * 2)
+        const elements = obj.map((item) => formatComplexObject(item, depth + 1)).join(`,\n${" ".repeat(depth * 2)}`)
+        return `[\n${indent}${elements}\n${" ".repeat((depth - 1) * 2)}]`
+    } else if (typeof obj === "object" && obj !== null) {
+        // BN objects
+        if (obj.constructor && obj.constructor.name === "BN") {
+            return obj.toString() // JSON.stringify(obj)
+        } else {
+            const indent = " ".repeat(depth * 2)
+            const entries = Object.entries(obj)
+                .map(([key, value]) => `${indent}  ${key}: ${formatComplexObject(value, depth + 1)}`)
+                .join(",\n")
+
+            return `{\n${entries}\n${" ".repeat((depth - 1) * 2)}}`
+        }
+    } else {
+        return JSON.stringify(obj)
+    }
+}
+
 // src/fuel-error.ts
 var import_versions = require("@fuel-ts/versions");
 var _FuelError = class extends Error {
@@ -132,6 +154,11 @@ var _FuelError = class extends Error {
   }
   code;
   constructor(code, message, metadata = {}) {
+    if (metadata.logs) {
+      message = `${message}
+  
+    Logs: ${formatComplexObject(metadata.logs)}\n`;
+    }
     super(message);
     this.code = code;
     this.name = "FuelError";
diff --git a/dist/index.mjs b/dist/index.mjs
index d515bdf5e388f524ad316239ceb8aecbdf8ebaea..d61353ee9accf84640336a730539dadfec376909 100644
--- a/dist/index.mjs
+++ b/dist/index.mjs
@@ -82,6 +82,28 @@ var ErrorCode = /* @__PURE__ */ ((ErrorCode2) => {
   return ErrorCode2;
 })(ErrorCode || {});
 
+function formatComplexObject(obj, depth = 2) {
+  if (Array.isArray(obj)) {
+      const indent = " ".repeat(depth * 2)
+      const elements = obj.map((item) => formatComplexObject(item, depth + 1)).join(`,\n${" ".repeat(depth * 2)}`)
+      return `[\n${indent}${elements}\n${" ".repeat((depth - 1) * 2)}]`
+  } else if (typeof obj === "object" && obj !== null) {
+      // BN objects
+      if (obj.constructor && obj.constructor.name === "BN") {
+          return obj.toString() // JSON.stringify(obj)
+      } else {
+          const indent = " ".repeat(depth * 2)
+          const entries = Object.entries(obj)
+              .map(([key, value]) => `${indent}  ${key}: ${formatComplexObject(value, depth + 1)}`)
+              .join(",\n")
+
+          return `{\n${entries}\n${" ".repeat((depth - 1) * 2)}}`
+      }
+  } else {
+      return JSON.stringify(obj)
+  }
+}
+
 // src/fuel-error.ts
 import { versions } from "@fuel-ts/versions";
 var _FuelError = class extends Error {
@@ -107,6 +129,11 @@ var _FuelError = class extends Error {
   }
   code;
   constructor(code, message, metadata = {}) {
+    if (metadata.logs) {
+      message = `${message}
+  
+    Logs: ${formatComplexObject(metadata.logs)}\n`;
+    }
     super(message);
     this.code = code;
     this.name = "FuelError";